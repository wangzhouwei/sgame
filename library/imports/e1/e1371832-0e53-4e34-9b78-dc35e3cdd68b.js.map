{"version":3,"sources":["../../../../../../assets/Script/core/client/assets/Script/core/client/SC_RegLogin.js"],"names":["urlParse","params","window","location","name","value","str","href","num","indexOf","substr","arr","split","i","length","substring","functionid","require","messageid","SC_RegLogin","cc","Class","extends","Component","statics","getInstance","sc_reglogin","properties","functionId","emFunction_RegLogin","ctor","xx","ptNet","RegisterMsg","onMessageEvent","funId","msgId","msgData","console","log","SC_WEIXIN_LOGIN_P","code","onLine","ptEvent","notifyEvent","msg","s","key","hasOwnProperty","element","Object","keys","forEach","k1","v","k","parseInt","emFunction_BaseInfo","emFunction_Game","gameInfo","setGameTypeList","gametypelist","CS_LOGIN","data","account","sys","localStorage","getItem","Date","now","setItem","logindata","hductp","uniquecode","areaid","wxdata","refresh_token","hdtp","emHDType_Apple","hduc","accounttype","emAccountType_Fast","version","random","startEvent","CS_WEIXIN_LOGIN_P"],"mappings":"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","file":"SC_RegLogin.js","sourceRoot":"../../../../../../assets/Script/core/client","sourcesContent":["function urlParse(){\n    var params = {};\n    if(window.location == null){\n        return params;\n    }\n    var name,value; \n    var str=window.location.href; //取得整个地址栏\n    var num=str.indexOf(\"?\") \n    str=str.substr(num+1); //取得所有参数   stringvar.substr(start [, length ]\n\n    var arr=str.split(\"&\"); //各个参数放到数组里\n    for(var i=0;i < arr.length;i++){ \n        num=arr[i].indexOf(\"=\"); \n        if(num>0){ \n            name=arr[i].substring(0,num);\n            value=arr[i].substr(num+1);\n            params[name]=value;\n        } \n    }\n    return params;\n}\nvar functionid = require('FunctionID');\nvar messageid = require('F_RegLogin');\nconst SC_RegLogin = cc.Class({\n    extends: cc.Component,\n    statics:{\n        getInstance() {\n            if (!this.sc_reglogin) {\n                this.sc_reglogin = new SC_RegLogin();\n            }\n            return this.sc_reglogin;\n        },\n    },\n    properties: {\n        functionId:functionid.emFunction_RegLogin,\n    },\n    ctor(){\n        cc.xx.ptNet.RegisterMsg(this);\n    },\n    onMessageEvent(funId,msgId,msgData){\n        console.log('login onMessageEvent' + funId+'_'+msgId);\n        // cc.xx.ptEvent.notifyEvent(funId,msgId,msgData);\n        switch(msgId)\n        {\n            case messageid.SC_WEIXIN_LOGIN_P:\n            if(msgData.code === 0){\n                this.onLine(msgData);\n                cc.xx.ptEvent.notifyEvent(funId,msgId,msgData);\n            }\n            else \n                cc.log('登录失败'+msgData.msg);\n        }\n    },\n    onLine( s ){\n        cc.log(\"SC_ONLINE 上线信息\",s)\n\n        for (const key in s) {\n            if (s.hasOwnProperty(key)) {\n                const element = s[key];\n                if(key == \"state\"){\n\n                }\n                else if(key == \"isgame\"){\n                    \n                }\n                else if(key == \"isbindaccount\"){\n                    \n                }\n                else if(key == \"kick\"){\n                    \n                }\n                else if(key == \"gamelist\"){\n                    \n                }\n                else if(key == \"areaid\"){\n                    \n                }\n                else if(key == \"Function\"){\n                    Object.keys(element).forEach((k1,v) => {\n                        let k = parseInt(k)\n                        if(k == functionid.emFunction_BaseInfo){\n                    \n                        }\n                        else if(k == functionid.emFunction_Game){\n                    \n                        }\n                    });\n                }\n            }\n        }\n        cc.xx.gameInfo.setGameTypeList(s.gametypelist);\n    },\n    CS_LOGIN(data){\n        var account = urlParse()[\"account\"];\n        if(account == null){\n            account = cc.sys.localStorage.getItem(\"account\");\n        }\n        if(account == null){\n            account = Date.now();\n            cc.sys.localStorage.setItem(\"account\",account);\n        }\n        let logindata = {\n            hductp:3,\n            uniquecode:'qweqwe',\n            areaid:'1',\n            wxdata:{\n                code:'123456',\n                refresh_token:'',\n            },\n            hdtp:messageid.emHDType_Apple,\n            hduc:account,\n            accounttype:messageid.emAccountType_Fast,\n            version:0,\n            random:'',\n            account:'',\n        };\n        // let loginstr = JSON.stringify(logindata);\n        cc.xx.ptNet.startEvent(this.functionId,messageid.CS_WEIXIN_LOGIN_P,logindata);\n    },\n});"]}