{"version":3,"sources":["PtCore.js"],"names":["GameEventManager","require","PTEventManager","cc","Class","proList","_currConnectIndex","extends","statics","getInstance","ptEvntManager","ctor","connectNet","cb","connect","xx","g_Config","hallserverAddress","changeConnectHost","host","startEvent","funid","msgid","data","log","body","sendMessage","RegisterMsg","target","forEach","item","push","length","onMsg","funId","msgId","msgData","iteam","functionId","onMessageEvent","recieveWXAuthenticationCode","wxcode","gameCfg","EVENT","EVENT_LOGIN_REP","writtenUserInfoIntoCellPhone","sys","localStorage","setItem","userEvName","USER_INFO_KEY","JSON","stringify","user","USER_CARD_INFO_KEY","cards","updateCurrentBatteryStatus","sta","notifyEvent","BATTERTY","BATTERTY_CHARGING","updateCurrentBatteryLevel","elevel","BATTERTY_LEVEL_UPDATE","toPrecision","didUploadToGvoiceSever","fileID","EVENT_YUYIN_UPLOAD","didFinishPlayCurrentMessage","GVOICE","GVOICE_MESSAGE_FINISH_PLAYING"],"mappings":"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","file":"PtCore.js","sourceRoot":"../../../../../assets/Script/Event","sourcesContent":["/**\n * Created by Administrator on 2017/8/31.\n */\nconst GameEventManager = require(\"./GameEventManager.js\");\nconst PTEventManager = cc.Class({\n    proList:null,\n    _currConnectIndex:0,\n    extends: GameEventManager,\n    statics: {\n        getInstance() {\n            if (!this.ptEvntManager) {\n                this.ptEvntManager = new PTEventManager();\n            }\n            return this.ptEvntManager;\n        },\n    },\n    ctor(){\n        this.proList = [];\n        this._currConnectIndex = 0;\n    },\n    connectNet(cb) {\n        this.connect(cc.xx.g_Config.hallserverAddress[0], cb);\n    },\n    //切换链接\n    changeConnectHost(){\n        this._currConnectIndex++;\n        var host = cc.xx.g_Config.hallserverAddress[this._currConnectIndex];\n        return host\n    },\n    /**\n     *  请求协议\n     * @param funid 协议id\n     * @param event 协议id\n     * @param data 需要的字段\n     */\n    startEvent(funid,msgid,data) {\n        cc.log(`发送的协议id为：${funid}_${msgid}`);\n        const body = {\n            \"mid\":msgid,\n            'fid':funid\n        };\n        body.data = data;\n        this.sendMessage(body);\n    },\n\n    /**\n     *  收到服务器回复\n     * @param msgId 回复的协议id\n     * @param msgData 回复的字段\n     */\n    RegisterMsg(target){\n        this.proList.forEach((item) => {\n            if (item == target) {\n                return true\n            }\n       });\n       if (target) {\n           this.proList.push(target);\n       } else {\n           cc.log(\"target is null\");\n       }\n       cc.log(\"proList.length = \", this.proList.length);\n    },\n    onMsg(funId,msgId,msgData) {\n        cc.log(`PTEventManager 收到的协议id为：${funId}_${msgId}`);\n        cc.log(msgData);\n        this.proList.forEach((iteam)=>{\n                if(iteam.functionId === funId){\n                    iteam.onMessageEvent(funId,msgId,msgData);\n                }\n            });\n    },\n    /**\n     *  微信回调返回到code后，被调用的方法(被原生回调的)\n     * @param wxcode 微信成功授权登录后传过来的code\n     */\n    recieveWXAuthenticationCode(wxcode){\n        this.startEvent(cc.xx.gameCfg.EVENT.EVENT_LOGIN_REP,wxcode);\n    },\n    // 往手机本地存用户信息\n    writtenUserInfoIntoCellPhone(data) {\n        cc.sys.localStorage.setItem(cc.xx.userEvName.USER_INFO_KEY, JSON.stringify(data.user));\n        cc.sys.localStorage.setItem(cc.xx.userEvName.USER_CARD_INFO_KEY, JSON.stringify(data.cards));\n        // if(data.agent) {\n        //     cc.sys.localStorage.setItem(cc.xx.userEvName.USER_ANGENT_INFO, JSON.stringify(data.agent));\n        // }\n    },\n    /**\n     *  电量改变监听的回调更新(被原生回调的)\n     * @param sta 充电状态\n     */\n    updateCurrentBatteryStatus(sta) {\n        cc.log(\"oc观察者观察电量发生改变回调\"+sta);\n        if(sta == \"Charging\"){\n            this.notifyEvent(cc.xx.gameCfg.BATTERTY.BATTERTY_CHARGING,true);\n        }else {\n            this.notifyEvent(cc.xx.gameCfg.BATTERTY.BATTERTY_CHARGING,false);\n        }\n    },\n    /**\n     *  电量改变监听的回调更新(被原生回调的)\n     * @param elevel 电量值\n     */\n    updateCurrentBatteryLevel(elevel) {\n        cc.log(\"oc观察者观察电量发生改变回调\"+elevel);\n        this.notifyEvent(cc.xx.gameCfg.BATTERTY.BATTERTY_LEVEL_UPDATE,elevel.toPrecision(2));\n    },\n    /**\n     *  成功上传到腾讯服务器后回调(被原生回调的)\n     * @param fileID 语音消息id\n     */\n    didUploadToGvoiceSever(fileID) {\n        cc.log(\"oc回调js成功，上传成功\"+fileID);\n        this.startEvent(cc.xx.gameCfg.EVENT.EVENT_YUYIN_UPLOAD,fileID);\n    },\n    /**\n     *  播放成功后回调(被原生回调的)\n     * @param\n     */\n    didFinishPlayCurrentMessage() {\n        cc.log(\"oc回调js成功，播放完成\");\n        this.notifyEvent(cc.xx.gameCfg.GVOICE.GVOICE_MESSAGE_FINISH_PLAYING);\n    },\n});"]}